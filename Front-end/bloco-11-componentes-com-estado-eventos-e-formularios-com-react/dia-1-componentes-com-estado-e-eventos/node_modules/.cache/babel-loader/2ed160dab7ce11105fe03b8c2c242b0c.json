{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/exercise-pokedex-state/src/Pokedex.js\";\nimport React from 'react';\nimport Pokemon from './Pokemon';\n\nclass Pokedex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemonIndex: 0,\n      filter: 'all'\n    };\n  }\n\n  filterPokemons(filteredType) {\n    this.setState({\n      filteredType,\n      pokemonIndex: 0\n    });\n  }\n\n  nextPokemon(numberOfPokemons) {\n    this.setState(state => ({\n      pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons\n    }));\n  }\n\n  fetchFilteredPokemons() {\n    const {\n      pokemons\n    } = this.props;\n    const {\n      filteredType\n    } = this.state;\n    return pokemons.filter(pokemon => {\n      if (filteredType === 'all') return true;\n      return pokemon.type === filteredType;\n    });\n  }\n\n  fetchPokemonTypes() {\n    const {\n      pokemons\n    } = this.props;\n    return [...new Set(pokemons.reduce((types, {\n      type\n    }) => [...types, type], []))];\n  }\n\n  render() {\n    const {\n      pokemons\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, pokemons.map(pokemon => /*#__PURE__*/React.createElement(Pokemon, {\n      key: pokemon.id,\n      pokemon: pokemon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 36\n      }\n    })));\n  }\n\n}\n\nexport default Pokedex;","map":{"version":3,"sources":["/home/guilherme/exercise-pokedex-state/src/Pokedex.js"],"names":["React","Pokemon","Pokedex","Component","constructor","props","state","pokemonIndex","filter","filterPokemons","filteredType","setState","nextPokemon","numberOfPokemons","fetchFilteredPokemons","pokemons","pokemon","type","fetchPokemonTypes","Set","reduce","types","render","map","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,CADH;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAEDC,EAAAA,cAAc,CAACC,YAAD,EAAe;AAC3B,SAAKC,QAAL,CAAc;AAAED,MAAAA,YAAF;AAAgBH,MAAAA,YAAY,EAAE;AAA9B,KAAd;AACD;;AAEDK,EAAAA,WAAW,CAACC,gBAAD,EAAmB;AAC5B,SAAKF,QAAL,CAAcL,KAAK,KAAK;AACtBC,MAAAA,YAAY,EAAE,CAACD,KAAK,CAACC,YAAN,GAAqB,CAAtB,IAA2BM;AADnB,KAAL,CAAnB;AAGD;;AAEDC,EAAAA,qBAAqB,GAAG;AACtB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKV,KAA1B;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAmB,KAAKJ,KAA9B;AAEA,WAAOS,QAAQ,CAACP,MAAT,CAAgBQ,OAAO,IAAI;AAChC,UAAIN,YAAY,KAAK,KAArB,EAA4B,OAAO,IAAP;AAC5B,aAAOM,OAAO,CAACC,IAAR,KAAiBP,YAAxB;AACD,KAHM,CAAP;AAID;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEH,MAAAA;AAAF,QAAe,KAAKV,KAA1B;AAEA,WAAO,CAAC,GAAG,IAAIc,GAAJ,CAAQJ,QAAQ,CAACK,MAAT,CAAgB,CAACC,KAAD,EAAQ;AAAEJ,MAAAA;AAAF,KAAR,KAAqB,CAAC,GAAGI,KAAJ,EAAWJ,IAAX,CAArC,EAAuD,EAAvD,CAAR,CAAJ,CAAP;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAe,KAAKV,KAA1B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGU,QAAQ,CAACQ,GAAT,CAAcP,OAAD,iBAAa,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACQ,EAAtB;AAA0B,MAAA,OAAO,EAAER,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,CADH,CADF;AAKD;;AA1CmC;;AA6CtC,eAAed,OAAf","sourcesContent":["import React from 'react';\nimport Pokemon from './Pokemon';\n\nclass Pokedex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemonIndex: 0,\n      filter: 'all',\n    };\n  }\n\n  filterPokemons(filteredType) {\n    this.setState({ filteredType, pokemonIndex: 0});\n  }\n\n  nextPokemon(numberOfPokemons) {\n    this.setState(state => ({\n      pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons,\n    }));\n  }\n\n  fetchFilteredPokemons() {\n    const { pokemons } = this.props;\n    const { filteredType } = this.state;\n\n    return pokemons.filter(pokemon => {\n      if (filteredType === 'all') return true;\n      return pokemon.type === filteredType;\n    })\n  }\n\n  fetchPokemonTypes() {\n    const { pokemons } = this.props;\n\n    return [...new Set(pokemons.reduce((types, { type }) => [...types, type], []))];\n  }\n\n  render() {\n    const { pokemons } = this.props;\n    return (\n      <div>\n        {pokemons.map((pokemon) => <Pokemon key={pokemon.id} pokemon={pokemon}/>)}\n      </div>\n    );\n  }\n}\n\nexport default Pokedex;\n"]},"metadata":{},"sourceType":"module"}